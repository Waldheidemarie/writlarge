# flake8: noqa
# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-11 17:15
from __future__ import unicode_literals

import audit_log.models.fields
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchivalCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('finding_aid_url', models.URLField()),
                ('linear_feet', models.FloatField()),
                ('inclusive_start_date', models.DateField(null=True)),
                ('inclusive_end_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', audit_log.models.fields.CreatingUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archivalcollection_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archivalcollection_last_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Site of Teaching & Learning',
            },
        ),
        migrations.CreateModel(
            name='ArchivalRecordFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ArchivalRespository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(unique=True)),
                ('latlng', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('notes', models.TextField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_modified_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', audit_log.models.fields.CreatingUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archivalrepository_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archivalrepository_last_modified_by', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Site of Teaching & Learning',
            },
        ),
        migrations.CreateModel(
            name='DigitalObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('file', models.FileField(upload_to=b'%Y/%m/%d/')),
                ('description', models.TextField()),
                ('source_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', audit_log.models.fields.CreatingUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digitalobject_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digitalobject_last_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'verbose_name': 'Digital Object',
            },
        ),
        migrations.CreateModel(
            name='LearningSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(unique=True)),
                ('latlng', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('established', models.DateField()),
                ('defunct', models.DateField(blank=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_modified_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Site of Teaching & Learning',
            },
        ),
        migrations.CreateModel(
            name='LearningSiteCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='learningsite',
            name='category',
            field=models.ManyToManyField(to='main.LearningSiteCategory'),
        ),
        migrations.AddField(
            model_name='learningsite',
            name='created_by',
            field=audit_log.models.fields.CreatingUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='learningsite_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learningsite',
            name='digital_object',
            field=models.ManyToManyField(blank=True, to='main.DigitalObject'),
        ),
        migrations.AddField(
            model_name='learningsite',
            name='last_modified_by',
            field=audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='learningsite_last_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learningsite',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='archivalcollection',
            name='learning_sites',
            field=models.ManyToManyField(to='main.LearningSite'),
        ),
        migrations.AddField(
            model_name='archivalcollection',
            name='record_format',
            field=models.ManyToManyField(to='main.ArchivalRecordFormat'),
        ),
        migrations.AddField(
            model_name='archivalcollection',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ArchivalRespository'),
        ),
    ]
